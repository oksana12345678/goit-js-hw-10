{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputDateTimePicker = document.getElementById('datetime-picker');\nconst btnStart = document.querySelector('[data-start]');\n\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      btnStart.disabled = true;\n    } else {\n      userSelectedDate = selectedDates[0];\n      btnStart.disabled = false;\n    }\n  },\n};\nflatpickr(inputDateTimePicker, options);\n\n\nbtnStart.addEventListener('click', (e) =>{\n \n  if (userSelectedDate === null) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date',\n    });\n    return;\n  }\n  const date = userSelectedDate.toISOString().split('T')[0];\n  const time = userSelectedDate.toISOString().split('T')[1].split('.')[0];\n  const data = {\n    date: date,\n    time: time,\n  };\n  console.log(data);\n  e.preventDefault();\n})\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["inputDateTimePicker","btnStart","userSelectedDate","options","selectedDates","iziToast","flatpickr","e","date","time","convertMs","ms","days","hours","minutes","seconds"],"mappings":"6vBAKA,MAAMA,EAAsB,SAAS,eAAe,iBAAiB,EAC/DC,EAAW,SAAS,cAAc,cAAc,EAEtD,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAI,IAAI,MACzBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDJ,EAAS,SAAW,KAEpBC,EAAmBE,EAAc,CAAC,EAClCH,EAAS,SAAW,GAEvB,CACH,EACAK,EAAUN,EAAqBG,CAAO,EAGtCF,EAAS,iBAAiB,QAAUM,GAAK,CAEvC,GAAIL,IAAqB,KAAM,CAC7BG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,sBACf,CAAK,EACD,MACD,CACD,MAAMG,EAAON,EAAiB,YAAW,EAAG,MAAM,GAAG,EAAE,CAAC,EAClDO,EAAOP,EAAiB,YAAW,EAAG,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAKtE,QAAQ,IAJK,CACX,KAAMM,EACN,KAAMC,CACV,CACkB,EAChBF,EAAE,eAAc,CAClB,CAAC,EAED,SAASG,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}